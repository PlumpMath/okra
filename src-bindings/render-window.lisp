;;;; render-window.lisp
;;;;
;;;; This file has been generated by the Okra Bindings Generator.
;;;; You should not edit this file unless you know what you're doing.
;;;; Any changes you've made directly to this file will not be retained
;;;; when a new instance of this file is generated.
;;;;
;;;; author: Erik Winkels (aerique@xs4all.nl)
;;;;
;;;; See the LICENSE file in the Okra root directory for more info.
;;;;
;;;; This file was generated on: 2009-09-24 13:29:03.

(in-package :okra-bindings)


;;; Class

(defclass render-window (render-target)
  ())


;;; Foreign Functions & Methods

;; name: "setFullscreen"
;; type: "void"
;; args: (("bool" . "fullScreen") ("unsigned int" . "width") ("unsigned int" . "height"))
;;
(defcfun "ogre_render_window_set_fullscreen"
    :void
  (ogre-render-window :pointer)
  (full-screen :boolean)
  (width :unsigned-int)
  (height :unsigned-int))

(defmethod set-fullscreen ((this render-window) full-screen width height)
  (ogre-render-window-set-fullscreen (pointer-to this) full-screen width height))


;; name: "resize"
;; type: "void"
;; args: (("unsigned int" . "width") ("unsigned int" . "height"))
;;
(defcfun "ogre_render_window_resize"
    :void
  (ogre-render-window :pointer)
  (width :unsigned-int)
  (height :unsigned-int))

(defmethod resize ((this render-window) width height)
  (ogre-render-window-resize (pointer-to this) width height))


;; name: "windowMovedOrResized"
;; type: "void"
;; args: "void"
;;
(defcfun "ogre_render_window_window_moved_or_resized"
    :void
  (ogre-render-window :pointer))

(defmethod window-moved-or-resized ((this render-window))
  (ogre-render-window-window-moved-or-resized (pointer-to this)))


;; name: "reposition"
;; type: "void"
;; args: (("int" . "left") ("int" . "top"))
;;
(defcfun "ogre_render_window_reposition"
    :void
  (ogre-render-window :pointer)
  (left :int)
  (top :int))

(defmethod reposition ((this render-window) left top)
  (ogre-render-window-reposition (pointer-to this) left top))


;; name: "isActive"
;; type: "bool"
;; args: "void"
;;
(defcfun "ogre_render_window_is_active"
    :boolean
  (ogre-render-window :pointer))

(defmethod is-active ((this render-window))
  (ogre-render-window-is-active (pointer-to this)))


;; name: "isClosed"
;; type: "bool"
;; args: "void"
;;
(defcfun "ogre_render_window_is_closed"
    :boolean
  (ogre-render-window :pointer))

(defmethod is-closed ((this render-window))
  (ogre-render-window-is-closed (pointer-to this)))


;; name: "isPrimary"
;; type: "bool"
;; args: "void"
;;
(defcfun "ogre_render_window_is_primary"
    :boolean
  (ogre-render-window :pointer))

(defmethod is-primary ((this render-window))
  (ogre-render-window-is-primary (pointer-to this)))


;; name: "isFullScreen"
;; type: "bool"
;; args: "void"
;;
(defcfun "ogre_render_window_is_full_screen"
    :boolean
  (ogre-render-window :pointer))

(defmethod is-full-screen ((this render-window))
  (ogre-render-window-is-full-screen (pointer-to this)))


;; name: "suggestPixelFormat"
;; type: "PixelFormat"
;; args: "void"
;;
(defcfun "ogre_render_window_suggest_pixel_format"
    pixel-format
  (ogre-render-window :pointer))

(defmethod suggest-pixel-format ((this render-window))
  (ogre-render-window-suggest-pixel-format (pointer-to this)))


;; name: "isDeactivatedOnFocusChange"
;; type: "bool"
;; args: "void"
;;
(defcfun "ogre_render_window_is_deactivated_on_focus_change"
    :boolean
  (ogre-render-window :pointer))

(defmethod is-deactivated-on-focus-change ((this render-window))
  (ogre-render-window-is-deactivated-on-focus-change (pointer-to this)))


;; name: "setDeactivateOnFocusChange"
;; type: "void"
;; args: (("bool" . "deactivate"))
;;
(defcfun "ogre_render_window_set_deactivate_on_focus_change"
    :void
  (ogre-render-window :pointer)
  (deactivate :boolean))

(defmethod set-deactivate-on-focus-change ((this render-window) deactivate)
  (ogre-render-window-set-deactivate-on-focus-change (pointer-to this) deactivate))


;;; Overloaded Foreign Functions

;; name: "create"
;; type: "void"
;; args: (("const String&" . "name") ("unsigned int" . "width") ("unsigned int" . "height") ("bool" . "fullScreen") ("const NameValuePairList*" . "miscParams"))
;;
(defcfun "ogre_render_window_create_string_unsignedint_unsignedint_bool_namevaluepairlist"
    :void
  (ogre-render-window :pointer)
  (name :string)
  (width :unsigned-int)
  (height :unsigned-int)
  (full-screen :boolean)
  (misc-params :pointer))


;; name: "destroy"
;; type: "void"
;; args: "void"
;;
(defcfun "ogre_render_window_destroy_void"
    :void
  (ogre-render-window :pointer))


;; name: "isVisible"
;; type: "bool"
;; args: "void"
;;
(defcfun "ogre_render_window_is_visible_void"
    :boolean
  (ogre-render-window :pointer))


;; name: "setVisible"
;; type: "void"
;; args: (("bool" . "visible"))
;;
(defcfun "ogre_render_window_set_visible_bool"
    :void
  (ogre-render-window :pointer)
  (visible :boolean))


;;; Methods for Overloaded Foreign Functions

(defmethod is-visible ((this render-window) &optional (arg0 nil) (arg1 nil))
  (cond
    ((and (typep arg0 'null) (typep arg1 'null))
     (ogre-render-window-is-visible-void (pointer-to this)))
    (t (error "Overloaded method not defined for this class."))))


(defmethod set-visible ((this render-window) &optional (arg0 nil) (arg1 nil))
  (declare (ignore arg1))
  (cond
    ((and (typep arg0 'boolean))
     (ogre-render-window-set-visible-bool (pointer-to this) arg0))
    (t (error "Overloaded method not defined for this class."))))


(defmethod create ((this render-window) &optional (arg0 nil) (arg1 nil) (arg2 nil) (arg3 nil) (arg4 nil))
  (cond
    ((and (typep arg0 'string) (typep arg1 'integer) (typep arg2 'integer) (typep arg3 'boolean) (typep arg4 'cffi:foreign-pointer))
     (ogre-render-window-create-string-unsignedint-unsignedint-bool-namevaluepairlist (pointer-to this) arg0 arg1 arg2 arg3 arg4))
    (t (error "Overloaded method not defined for this class."))))


(defmethod destroy ((this render-window) &optional (arg0 nil))
  (cond
    ((and (typep arg0 'null))
     (ogre-render-window-destroy-void (pointer-to this)))
    (t (error "Overloaded method not defined for this class."))))



