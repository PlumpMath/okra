;;;; ray-scene-query.lisp
;;;;
;;;; This file has been generated by the Okra Bindings Generator.
;;;; You should not edit this file unless you know what you're doing.
;;;; Any changes you've made directly to this file will not be retained
;;;; when a new instance of this file is generated.
;;;;
;;;; author: Erik Winkels (aerique@xs4all.nl)
;;;;
;;;; See the LICENSE file in the Okra root directory for more info.
;;;;
;;;; This file was generated on: 2009-09-29 16:00:40.

(in-package :okra-bindings)


;;; Class

(defclass ray-scene-query (ogre-object)
  ())


;;; Foreign Functions & Methods

;; name: "setRay"
;; type: "void"
;; args: (("const Ray&" . "ray"))
;;
(defcfun "ogre_ray_scene_query_set_ray"
    :void
  (ogre-ray-scene-query :pointer)
  (ray :pointer))

(defmethod set-ray ((this ray-scene-query) ray)
  (ogre-ray-scene-query-set-ray (pointer-to this) ray))


;; name: "getRay"
;; type: "const Ray&"
;; args: "void"
;;
(defcfun "ogre_ray_scene_query_get_ray"
    :pointer
  (ogre-ray-scene-query :pointer))

(defmethod get-ray ((this ray-scene-query))
  (ogre-ray-scene-query-get-ray (pointer-to this)))


;; name: "setSortByDistance"
;; type: "void"
;; args: (("bool" . "sort") ("ushort" . "maxresults"))
;;
(defcfun "ogre_ray_scene_query_set_sort_by_distance"
    :void
  (ogre-ray-scene-query :pointer)
  (sort :boolean)
  (maxresults :ushort))

(defmethod set-sort-by-distance ((this ray-scene-query) sort maxresults)
  (ogre-ray-scene-query-set-sort-by-distance (pointer-to this) sort maxresults))


;; name: "getSortByDistance"
;; type: "bool"
;; args: "void"
;;
(defcfun "ogre_ray_scene_query_get_sort_by_distance"
    :boolean
  (ogre-ray-scene-query :pointer))

(defmethod get-sort-by-distance ((this ray-scene-query))
  (ogre-ray-scene-query-get-sort-by-distance (pointer-to this)))


;; name: "getMaxResults"
;; type: "ushort"
;; args: "void"
;;
(defcfun "ogre_ray_scene_query_get_max_results"
    :ushort
  (ogre-ray-scene-query :pointer))

(defmethod get-max-results ((this ray-scene-query))
  (ogre-ray-scene-query-get-max-results (pointer-to this)))


;; name: "getLastResults"
;; type: "RaySceneQueryResult&"
;; args: "void"
;;
(defcfun "ogre_ray_scene_query_get_last_results"
    :pointer
  (ogre-ray-scene-query :pointer))

(defmethod get-last-results ((this ray-scene-query))
  (ogre-ray-scene-query-get-last-results (pointer-to this)))


;; name: "clearResults"
;; type: "void"
;; args: "void"
;;
(defcfun "ogre_ray_scene_query_clear_results"
    :void
  (ogre-ray-scene-query :pointer))

(defmethod clear-results ((this ray-scene-query))
  (ogre-ray-scene-query-clear-results (pointer-to this)))


;;; Overloaded Foreign Functions

;; name: "execute"
;; type: "RaySceneQueryResult&"
;; args: "void"
;;
(defcfun "ogre_ray_scene_query_execute_void"
    :pointer
  (ogre-ray-scene-query :pointer))


;; name: "execute"
;; type: "void"
;; args: (("RaySceneQueryListener*" . "listener"))
;;
(defcfun "ogre_ray_scene_query_execute_rayscenequerylistener"
    :void
  (ogre-ray-scene-query :pointer)
  (listener :pointer))


;; name: "queryResult"
;; type: "bool"
;; args: (("MovableObject*" . "obj") ("Real" . "distance"))
;;
(defcfun "ogre_ray_scene_query_query_result_movableobject_real"
    :boolean
  (ogre-ray-scene-query :pointer)
  (obj :pointer)
  (distance okra-real))


;; name: "queryResult"
;; type: "bool"
;; args: (("SceneQuery::WorldFragment*" . "fragment") ("Real" . "distance"))
;;
(defcfun "ogre_ray_scene_query_query_result_scenequeryworldfragment_real"
    :boolean
  (ogre-ray-scene-query :pointer)
  (fragment :pointer)
  (distance okra-real))


;;; Methods for Overloaded Foreign Functions

(defmethod execute ((this ray-scene-query) &optional (arg0 nil))
  (cond
    ((and (typep arg0 'null))
     (ogre-ray-scene-query-execute-void (pointer-to this)))
    ((and (typep arg0 'cffi:foreign-pointer))
     (ogre-ray-scene-query-execute-rayscenequerylistener (pointer-to this) arg0))
    (t (error "Overloaded method not defined for this class."))))


(defmethod query-result ((this ray-scene-query) &optional (arg0 nil) (arg1 nil))
  (cond
    ((and (typep arg0 'cffi:foreign-pointer) (typep arg1 'real))
     (ogre-ray-scene-query-query-result-scenequeryworldfragment-real (pointer-to this) arg0 arg1))
    ((and (typep arg0 'cffi:foreign-pointer) (typep arg1 'real))
     (ogre-ray-scene-query-query-result-movableobject-real (pointer-to this) arg0 arg1))
    (t (error "Overloaded method not defined for this class."))))



