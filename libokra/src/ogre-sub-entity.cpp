// ogre-sub-entity.cpp
//
// This file has been generated by the Okra Bindings Generator.
// You should not edit this file unless you know what you're doing.
// Any changes you've made directly to this file will not be retained
// when a new instance of this file is generated.
//
// author: Erik Winkels (aerique@xs4all.nl)
//
// See the LICENSE file in the Okra root directory for more info.
//
// This file was generated on: 2009-10-28 16:11:12.

#include "handwritten/okra.h"


// Prototypes

extern "C"
{
    const char* ogre_sub_entity_get_material_name (SubEntity*);
    void ogre_sub_entity_set_material_name_string (SubEntity*, const char*);
    void ogre_sub_entity_set_material (SubEntity*, const MaterialPtr&);
    void ogre_sub_entity_set_visible_bool (SubEntity*, bool);
    bool ogre_sub_entity_is_visible_void (SubEntity*);
    SubMesh* ogre_sub_entity_get_sub_mesh_void (SubEntity*);
    Entity* ogre_sub_entity_get_parent (SubEntity*);
    const MaterialPtr& ogre_sub_entity_get_material (SubEntity*);
    Technique* ogre_sub_entity_get_technique (SubEntity*);
    void ogre_sub_entity_get_render_operation (SubEntity*, RenderOperation&);
    void ogre_sub_entity_get_world_transforms (SubEntity*, Matrix4*);
    unsigned short ogre_sub_entity_get_num_world_transforms (SubEntity*);
    Real ogre_sub_entity_get_squared_view_depth (SubEntity*, const Camera*);
    const LightList& ogre_sub_entity_get_lights (SubEntity*);
    bool ogre_sub_entity_get_casts_shadows (SubEntity*);
    VertexData* ogre_sub_entity_get_vertex_data_for_binding (SubEntity*);
}


// Functions

// name: "getMaterialName"
// type: "const String&"
// args: "void"
//
const char* ogre_sub_entity_get_material_name (SubEntity* ogre_sub_entity)
{
    return ogre_sub_entity->getMaterialName().c_str();
}

// name: "setMaterialName"
// type: "void"
// args: (("const String&" . "name"))
//
void ogre_sub_entity_set_material_name_string (SubEntity* ogre_sub_entity, const char* name)
{
    ogre_sub_entity->setMaterialName(name);
}

// name: "setMaterial"
// type: "void"
// args: (("const MaterialPtr&" . "material"))
//
void ogre_sub_entity_set_material (SubEntity* ogre_sub_entity, const MaterialPtr& material)
{
    ogre_sub_entity->setMaterial(material);
}

// name: "setVisible"
// type: "void"
// args: (("bool" . "visible"))
//
void ogre_sub_entity_set_visible_bool (SubEntity* ogre_sub_entity, bool visible)
{
    ogre_sub_entity->setVisible(visible);
}

// name: "isVisible"
// type: "bool"
// args: "void"
//
bool ogre_sub_entity_is_visible_void (SubEntity* ogre_sub_entity)
{
    return ogre_sub_entity->isVisible();
}

// name: "getSubMesh"
// type: "SubMesh*"
// args: "void"
//
SubMesh* ogre_sub_entity_get_sub_mesh_void (SubEntity* ogre_sub_entity)
{
    return ogre_sub_entity->getSubMesh();
}

// name: "getParent"
// type: "Entity*"
// args: "void"
//
Entity* ogre_sub_entity_get_parent (SubEntity* ogre_sub_entity)
{
    return ogre_sub_entity->getParent();
}

// name: "getMaterial"
// type: "const MaterialPtr&"
// args: "void"
//
const MaterialPtr& ogre_sub_entity_get_material (SubEntity* ogre_sub_entity)
{
    return ogre_sub_entity->getMaterial();
}

// name: "getTechnique"
// type: "Technique*"
// args: "void"
//
Technique* ogre_sub_entity_get_technique (SubEntity* ogre_sub_entity)
{
    return ogre_sub_entity->getTechnique();
}

// name: "getRenderOperation"
// type: "void"
// args: (("RenderOperation&" . "op"))
//
void ogre_sub_entity_get_render_operation (SubEntity* ogre_sub_entity, RenderOperation& op)
{
    ogre_sub_entity->getRenderOperation(op);
}

// name: "getWorldTransforms"
// type: "void"
// args: (("Matrix4*" . "xform"))
//
void ogre_sub_entity_get_world_transforms (SubEntity* ogre_sub_entity, Matrix4* xform)
{
    ogre_sub_entity->getWorldTransforms(xform);
}

// name: "getNumWorldTransforms"
// type: "unsigned short"
// args: "void"
//
unsigned short ogre_sub_entity_get_num_world_transforms (SubEntity* ogre_sub_entity)
{
    return ogre_sub_entity->getNumWorldTransforms();
}

// name: "getSquaredViewDepth"
// type: "Real"
// args: (("const Camera*" . "cam"))
//
Real ogre_sub_entity_get_squared_view_depth (SubEntity* ogre_sub_entity, const Camera* cam)
{
    return ogre_sub_entity->getSquaredViewDepth(cam);
}

// name: "getLights"
// type: "const LightList&"
// args: "void"
//
const LightList& ogre_sub_entity_get_lights (SubEntity* ogre_sub_entity)
{
    return ogre_sub_entity->getLights();
}

// name: "getCastsShadows"
// type: "bool"
// args: "void"
//
bool ogre_sub_entity_get_casts_shadows (SubEntity* ogre_sub_entity)
{
    return ogre_sub_entity->getCastsShadows();
}

// name: "getVertexDataForBinding"
// type: "VertexData*"
// args: "void"
//
VertexData* ogre_sub_entity_get_vertex_data_for_binding (SubEntity* ogre_sub_entity)
{
    return ogre_sub_entity->getVertexDataForBinding();
}


